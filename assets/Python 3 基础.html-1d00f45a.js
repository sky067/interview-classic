import{_ as n,p as a,q as s,a1 as e}from"./framework-5866ffd3.js";const i={},t=e(`<h1 id="python3-基础" tabindex="-1"><a class="header-anchor" href="#python3-基础" aria-hidden="true">#</a> Python3 基础</h1><h2 id="gil-全局解释器" tabindex="-1"><a class="header-anchor" href="#gil-全局解释器" aria-hidden="true">#</a> GIL（全局解释器）</h2><ol><li></li></ol><h2 id="装饰器" tabindex="-1"><a class="header-anchor" href="#装饰器" aria-hidden="true">#</a> 装饰器</h2><ol><li>什么是装饰器</li><li>装饰器的使用场景</li><li>函数装饰器 与 类装饰器 的区别</li></ol><h2 id="进程、线程、协程" tabindex="-1"><a class="header-anchor" href="#进程、线程、协程" aria-hidden="true">#</a> 进程、线程、协程</h2><h3 id="进程" tabindex="-1"><a class="header-anchor" href="#进程" aria-hidden="true">#</a> 进程</h3><h3 id="线程" tabindex="-1"><a class="header-anchor" href="#线程" aria-hidden="true">#</a> 线程</h3><ol><li>线程是操作系统调度资源的最小单位。</li><li>进程至少有一个线程。</li></ol><h3 id="协程" tabindex="-1"><a class="header-anchor" href="#协程" aria-hidden="true">#</a> 协程</h3><ol><li>什么是协程</li><li>协程的作用</li><li>协程的底层实现</li><li>协程什么时候会挂起，什么时候会启动</li></ol><h2 id="并发编程-多线程、多进程" tabindex="-1"><a class="header-anchor" href="#并发编程-多线程、多进程" aria-hidden="true">#</a> 并发编程（多线程、多进程）</h2><h3 id="多线程" tabindex="-1"><a class="header-anchor" href="#多线程" aria-hidden="true">#</a> 多线程</h3><h3 id="多进程" tabindex="-1"><a class="header-anchor" href="#多进程" aria-hidden="true">#</a> 多进程</h3><h2 id="设计模式" tabindex="-1"><a class="header-anchor" href="#设计模式" aria-hidden="true">#</a> 设计模式</h2><h3 id="单例模式" tabindex="-1"><a class="header-anchor" href="#单例模式" aria-hidden="true">#</a> 单例模式</h3><ul><li>实现单例模式</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">single</span><span class="token punctuation">(</span>cls<span class="token punctuation">)</span><span class="token punctuation">:</span>
    cls_obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token comment"># 一个类对应一个实例</span>
    <span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> cls <span class="token keyword">not</span> <span class="token keyword">in</span> cls_obj<span class="token punctuation">:</span>
            obj <span class="token operator">=</span> cls<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 创建实例</span>
            cls_obj<span class="token punctuation">[</span>cls<span class="token punctuation">]</span> <span class="token operator">=</span> obj
        <span class="token keyword">return</span> cls_obj<span class="token punctuation">[</span>cls<span class="token punctuation">]</span>
    <span class="token keyword">return</span> f

<span class="token decorator annotation punctuation">@single</span>
<span class="token keyword">class</span> <span class="token class-name">Message</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span>


m1 <span class="token operator">=</span> Message<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>m1<span class="token punctuation">)</span>
m2 <span class="token operator">=</span> Message<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>m2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),l=[t];function o(c,p){return a(),s("div",null,l)}const r=n(i,[["render",o],["__file","Python 3 基础.html.vue"]]);export{r as default};
